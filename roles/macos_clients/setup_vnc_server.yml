#################################################################
# Setup hostname
#################################################################
- set_fact:
    mac_hostnames:
      "172.16.50.130": "alpha.{{ internal_domain }}"
      "172.16.50.131": "beta.{{ internal_domain }}"
      "172.16.50.132": "charlie.{{ internal_domain }}"

- debug:
    msg: "{{ mac_hostnames[ansible_facts.default_ipv4.address] }}"

- name: Set hostname
  shell: "scutil --set {{ item }} \"{{ mac_hostnames[ansible_facts.default_ipv4.address] }}\""
  with_items:
    - "ComputerName"
    #- "LocalHostName"
    - "HostName"

- name: Flush DNS cache
  shell: "dscacheutil -flushcache"

#################################################################
# Setup VNC server
# https://aws.amazon.com/premiumsupport/knowledge-center/ec2-mac-instance-gui-access/
#################################################################
- name: VNC server healthcheck
  wait_for:
    port: 5900
    timeout: 10
  register: result
  ignore_errors: true
  
- name: Enable VNC server
  shell: 'defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false'
  when: result.failed is true

- name: Start VNC server
  shell: 'launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist'
  when: result.failed is true

- name: Install pexpect
  pip:
    name: 'pexpect'

- name: Set VNC user password
  ansible.builtin.expect:
    command: /usr/bin/dscl . -passwd /Users/ec2-user
    responses:
        "(.*)New Password:": "{{ vnc_admin_password }}"
  when: result.failed is true

- name: VNC server healthcheck
  wait_for:
    port: 5900
    delay: 10